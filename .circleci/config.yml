version: 2.1
commands:
  save_gradle_cache:
    steps:
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle" }}
  restore_gradle_cache:
    steps:
      - restore_cache:
          keys:
            - gradle-repo-v1-{{ .Branch }}-{{ checksum "build.gradle" }}
            - gradle-repo-v1-{{ .Branch }}-
            - gradle-repo-v1-

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: kcheranev/circleci-demo
    docker:
      - image: circleci/openjdk:8-jdk
jobs:
  compile-and-test:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - restore_gradle_cache
      - run: gradle test
      - save_gradle_cache

  tag-git-version:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - restore_gradle_cache
      - run:
          name: Get Release Scope
          command: |
            COMMIT_MSG=$(git log --format=%B -n 1 $CIRCLE_SHA1)
            if [[ $COMMIT_MSG == feat* ]] ;
            then
                SCOPE="minor"
            fi
            if [[ $COMMIT_MSG == fix* ]] ;
            then
                SCOPE="patch"
            fi
            if [[ $COMMIT_MSG == release* ]] ;
            then
                SCOPE="major"
            fi
            if [ -z "$SCOPE" ]; then
                exit 1
            fi
      - run: gradle final -Prelease.scope=$SCOPE
      - save_gradle_cache

  build-docker-image:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_gradle_cache
      - run: gradle build docker -PimageName=$IMAGE_NAME
      - save_gradle_cache
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish-docker-image:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            echo 'tag = ' $CIRCLE_TAG
            IMAGE_TAG=${CIRCLE_TAG/v/''}
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG

workflows:
  version: 2
  build-master:
    jobs:
      - compile-and-test
      - tag-git-version:
          requires:
            - compile-and-test
          filters:
            branches:
              only: master
  tagged-build:
    jobs:
      - build-docker-image:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - publish-docker-image:
          requires:
            - build-docker-image
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/